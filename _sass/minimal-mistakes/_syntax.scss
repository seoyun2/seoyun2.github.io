/* ==========================================================================
   Syntax highlighting
   ========================================================================== */

   div.code,
   pre {
     position: relative;
     margin-bottom: 1em;
     background-color: var(--base00);
     color: var(--base05);
     font-family: var(--monospace);
     font-size: var(--type-size-6);
     line-height: 1.8;
     border-radius: var(--border-radius);
   
     > code,
     code.highlight {
       margin: 0;
       padding: 1em;
     }
   }
   
   .highlight table {
     margin-bottom: 0;
     font-size: 1em;
     border: 0;
   
     td {
       padding: 0;
       width: calc(100% - 1em);
       border: 0;
   
       /* line numbers*/
       &.gutter,
       &.rouge-gutter {
         padding-right: 1em;
         width: 1em;
         color: var(--base04);
         border-right: 1px solid var(--base04);
         text-align: right;
       }
   
       /* code */
       &.code,
       &.rouge-code {
         padding-left: 1em;
       }
     }
   
     code {
       margin: 0;
     }
   }
   
   code {
     width: 100%;
   }
   
   .highlight .hll {
     background-color: var(--base06);
   }
   .highlight {
     .c {
       /* Comment */
       color: var(--base04);
     }
     .err {
       /* Error */
       color: var(--base08);
     }
     .k {
       /* Keyword */
       color: var(--base0e);
     }
     .l {
       /* Literal */
       color: var(--base09);
     }
     .n {
       /* Name */
       color: var(--base05);
     }
     .o {
       /* Operator */
       color: var(--base0c);
     }
     .p {
       /* Punctuation */
       color: var(--base05);
     }
     .cm {
       /* Comment.Multiline */
       color: var(--base04);
     }
     .cp {
       /* Comment.Preproc */
       color: var(--base04);
     }
     .c1 {
       /* Comment.Single */
       color: var(--base04);
     }
     .cs {
       /* Comment.Special */
       color: var(--base04);
     }
     .gd {
       /* Generic.Deleted */
       color: var(--base08);
     }
     .ge {
       /* Generic.Emph */
       font-style: italic;
     }
     .gh {
       /* Generic.Heading */
       color: var(--base05);
       font-weight: bold;
     }
     .gi {
       /* Generic.Inserted */
       color: var(--base0b);
     }
     .gp {
       /* Generic.Prompt */
       color: var(--base04);
       font-weight: bold;
     }
     .gs {
       /* Generic.Strong */
       font-weight: bold;
     }
     .gu {
       /* Generic.Subheading */
       color: var(--base0c);
       font-weight: bold;
     }
     .kc {
       /* Keyword.Constant */
       color: var(--base0e);
     }
     .kd {
       /* Keyword.Declaration */
       color: var(--base0e);
     }
     .kn {
       /* Keyword.Namespace */
       color: var(--base0c);
     }
     .kp {
       /* Keyword.Pseudo */
       color: var(--base0e);
     }
     .kr {
       /* Keyword.Reserved */
       color: var(--base0e);
   
     .kr {
       /* Keyword.Reserved */
       color: var(--base0e);
      }
      
     .kt {
       /* Keyword.Type */
       color: var(--base0a);
     }
     .ld {
       /* Literal.Date */
       color: $var(--base0b);
     }
     .m {
       /* Literal.Number */
       color: var(--base09);
     }
     .s {
       /* Literal.String */
       color: var(--base0b);
     }
     .na {
       /* Name.Attribute */
       color: var(--base0d);
     }
     .nb {
       /* Name.Builtin */
       color: $var(--base05);
     }
     .nc {
       /* Name.Class */
       color: var(--base0a);
     }
     .no {
       /* Name.Constant */
       color: var(--base08);
     }
     .nd {
       /* Name.Decorator */
       color: var(--base0a);
     }
     .ni {
       /* Name.Entity */
       color: var(--base05);
     }
     .ne {
       /* Name.Exception */
       color: var(--base08);
     }
     .nf {
       /* Name.Function */
       color: var(--base0d);
     }
     .nl {
       /* Name.Label */
       color: var(--base05);
     }
     .nn {
       /* Name.Namespace */
       color: var(--base0a);
     }
     .nx {
       /* Name.Other */
       color: var(--base0d);
     }
     .py {
       /* Name.Property */
       color: var(--base05);
     }
     .nt {
       /* Name.Tag */
       color: var(--base0c);
     }
     .nv {
       /* Name.Variable */
       color: var(--base08);
     }
     .ow {
       /* Operator.Word */
       color: var(--base0c);
     }
     .w {
       /* Text.Whitespace */
       color: var(--base05);
     }
     .mf {
       /* Literal.Number.Float */
       color: var(--base09);
     }
     .mh {
       /* Literal.Number.Hex */
       color: var(--base09);
     }
     .mi {
       /* Literal.Number.Integer */
       color: var(--base09);
     }
     .mo {
       /* Literal.Number.Oct */
       color: var(--base09);
     }
     .sb {
       /* Literal.String.Backtick */
       color: var(--base0b);
     }
     .sc {
       /* Literal.String.Char */
       color: var(--base05);
     }
     .sd {
       /* Literal.String.Doc */
       color: var(--base04);
     }
     .s2 {
       /* Literal.String.Double */
       color: var(--base0b);
     }
     .se {
       /* Literal.String.Escape */
       color: var(--base09);
     }
     .sh {
       /* Literal.String.Heredoc */
       color: var(--base0b);
     }
     .si {
       /* Literal.String.Interpol */
       color: var(--base09);
     }
     .sx {
       /* Literal.String.Other */
       color: var(--base0b);
     }
     .sr {
       /* Literal.String.Regex */
       color: var(--base0b);
     }
     .s1 {
       /* Literal.String.Single */
       color: var(--base0b);
     }
     .ss {
       /* Literal.String.Symbol */
       color: var(--base0b);
     }
     .bp {
       /* Name.Builtin.Pseudo */
       color: var(--base05);
     }
     .vc {
       /* Name.Variable.Class */
       color: var(--base08);
     }
     .vg {
       /* Name.Variable.Global */
       color: var(--base08);
     }
     .vi {
       /* Name.Variable.Instance */
       color: var(--base08);
     }
     .il {
       /* Literal.Number.Integer.Long */
       color: var(--base09);
     }
   }
   
   .gist {
     th, td {
       border-bottom: 0;
     }
    }}